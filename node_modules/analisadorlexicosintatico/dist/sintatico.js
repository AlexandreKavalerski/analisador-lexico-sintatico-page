"use strict";
exports.__esModule = true;
var constants_1 = require("./constants");
var infoNode_1 = require("./classes/infoNode");
var tree_1 = require("./classes/tree");
var infoNode_2 = require("./classes/infoNode");
var lexico_1 = require("./lexico");
function fillTree(entrada) {
    var tree = new tree_1.Tree();
    tree.raiz = getNodes(entrada, tree.raiz);
    return tree;
}
exports.fillTree = fillTree;
function getNodes(entrada, node) {
    if (matchNumero(entrada)) {
        var numero = entrada[0].token;
        node.centro = new tree_1.Node(new infoNode_1.Numero());
        var infoNumero = new infoNode_2.Terminal(numero);
        infoNumero = new infoNode_1.InfoNode(infoNumero.valor, infoNumero.tipo);
        node.centro.centro = new tree_1.Node(infoNumero);
        return node;
    }
    else if (matchIncognita(entrada)) {
        var incognita = entrada[0].token;
        node.centro = new tree_1.Node(new infoNode_2.Incognita());
        var infoIncognita = new infoNode_2.Terminal(incognita);
        infoIncognita = new infoNode_1.InfoNode(infoIncognita.valor, infoIncognita.tipo);
        node.centro.centro = new tree_1.Node(infoIncognita);
        return node;
    }
    else if (matchParentes(entrada)) {
        var nova_entrada = entrada.slice(1, entrada.length - 1);
        node.esquerdo = new tree_1.Node(new infoNode_2.AbreParenteses());
        node.direito = new tree_1.Node(new infoNode_2.FechaParenteses());
        node.centro = getNodes(nova_entrada, new tree_1.Node(new infoNode_2.E()));
        return node;
    }
    else if (matchOperacao(entrada) > 0) {
        var index_1 = matchOperacao(entrada);
        var esqOperador = entrada.slice(0, index_1);
        var dirOperador = entrada.slice(index_1 + 1, entrada.length);
        var nodeOperador = new tree_1.Node(new infoNode_1.Operador());
        var operacao = entrada[index_1].token;
        nodeOperador.centro = new tree_1.Node(new infoNode_2.Terminal(operacao));
        node.centro = nodeOperador;
        node.esquerdo = getNodes(esqOperador, new tree_1.Node(new infoNode_2.E()));
        node.direito = getNodes(dirOperador, new tree_1.Node(new infoNode_2.E()));
        return node;
    }
}
function matchNumero(entrada) {
    if (entrada.length === 1) {
        if (entrada[0].identificador === constants_1.TIPO_NUMERO) {
            return true;
        }
    }
    return false;
}
function matchIncognita(entrada) {
    if (entrada.length === 1) {
        if (entrada[0].identificador === constants_1.TIPO_INCOGNITA) {
            return true;
        }
    }
    return false;
}
function matchParentes(entrada) {
    if (entrada[0].identificador === constants_1.DESC_TIPO_ABRE_PARENTESES && entrada[entrada.length - 1].identificador === constants_1.DESC_TIPO_FECHA_PARENTESES) {
        var entradaStr = getStrEntrada(entrada.slice(1, entrada.length - 1));
        var parenteseAberto = false;
        for (var _i = 0, entradaStr_1 = entradaStr; _i < entradaStr_1.length; _i++) {
            var char = entradaStr_1[_i];
            if (lexico_1.eh_abre_parentese(char)) {
                parenteseAberto = true;
            }
            if (lexico_1.eh_fecha_parentese(char) && parenteseAberto) {
                parenteseAberto = false;
            }
        }
        return !parenteseAberto;
    }
    return false;
}
function getStrEntrada(entrada, separator) {
    if (separator === void 0) { separator = ""; }
    return entrada.map(function (token) { return token.token; }).join(separator);
}
function matchOperacao(entrada) {
    var entradaStr = getStrEntrada(entrada);
    var index = 0;
    var parentesesAbertos = 0;
    for (var _i = 0, entradaStr_2 = entradaStr; _i < entradaStr_2.length; _i++) {
        var char = entradaStr_2[_i];
        if (lexico_1.eh_abre_parentese(char)) {
            parentesesAbertos += 1;
        }
        else if (lexico_1.eh_fecha_parentese(char)) {
            parentesesAbertos -= 1;
        }
        else if (lexico_1.eh_operador(char) && parentesesAbertos === 0) {
            return index;
        }
        index++;
    }
    console.log(entradaStr);
    return 0;
}
